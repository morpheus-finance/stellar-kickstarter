
CONFIG OPTIONS

	allowUnicodeIdentifiers
	    boolean, toggles whether unicode identifiers are allowed in names or not, default is false (Default: false)

	disallowAdditionalPropertiesIfNotPresent
	    If false, the 'additionalProperties' implementation (set to true by default) is compliant with the OAS and JSON schema specifications. If true (default), keep the old (incorrect) behaviour that 'additionalProperties' is set to false by default. (Default: true)
	        false - The 'additionalProperties' implementation is compliant with the OAS and JSON schema specifications.
	        true - Keep the old (incorrect) behaviour that 'additionalProperties' is set to false by default.

	ensureUniqueParams
	    Whether to ensure parameter names are unique in an operation (rename parameters that are not). (Default: true)

	enumNameSuffix
	    Suffix that will be appended to all enum names. (Default: Enum)

	enumPropertyNaming
	    Naming convention for enum properties: 'camelCase', 'PascalCase', 'snake_case', 'UPPERCASE', and 'original' (Default: PascalCase)

	enumPropertyNamingReplaceSpecialChar
	    Set to true to replace '-' and '+' symbols with 'minus_' and 'plus_' in enum of type string (Default: false)

	enumUnknownDefaultCase
	    If the server adds new enum cases, that are unknown by an old spec/client, the client will fail to parse the network response.With this option enabled, each enum will have a new case, 'unknown_default_open_api', so that when the server sends an enum case that is not known by the client/spec, they can safely fallback to this case. (Default: false)
	        false - No changes to the enum's are made, this is the default option.
	        true - With this option enabled, each enum will have a new case, 'unknown_default_open_api', so that when the enum case sent by the server is not known by the client/spec, can safely be decoded to this case.

	fileContentDataType
	    Specifies the type to use for the content of a file - i.e. Blob (Browser, Deno) / Buffer (node) (Default: Buffer)

	framework
	    Specify the framework which should be used in the client code. (Default: fetch-api)
	        fetch-api - fetch-api
	        jquery - jquery

	importFileExtension
	    File extension to use with relative imports. Set it to '.js' or '.mjs' when using [ESM](https://nodejs.org/api/esm.html). Defaults to '.ts' when 'platform' is set to 'deno'.

	legacyDiscriminatorBehavior
	    Set to false for generators with better support for discriminators. (Python, Java, Go, PowerShell, C# have this enabled by default). (Default: true)
	        true - The mapping in the discriminator includes descendent schemas that allOf inherit from self and the discriminator mapping schemas in the OAS document.
	        false - The mapping in the discriminator includes any descendent schemas that allOf inherit from self, any oneOf schemas, any anyOf schemas, any x-discriminator-values, and the discriminator mapping schemas in the OAS document AND Codegen validates that oneOf and anyOf schemas contain the required discriminator and throws an error if the discriminator is missing.

	modelPropertyNaming
	    Naming convention for the property: 'camelCase', 'PascalCase', 'snake_case' and 'original', which keeps the original name (Default: camelCase)

	npmName
	    The name under which you want to publish generated npm package. Required to generate a full package

	npmRepository
	    Use this property to set an url your private npmRepo in the package.json

	npmVersion
	    The version of your npm package. If not provided, using the version from the OpenAPI specification file. (Default: 1.0.0)

	nullSafeAdditionalProps
	    Set to make additional properties types declare that their indexer may return undefined (Default: false)

	paramNaming
	    Naming convention for parameters: 'camelCase', 'PascalCase', 'snake_case' and 'original', which keeps the original name (Default: camelCase)

	platform
	    Specifies the platform the code should run on. The default is 'node' for the 'request' framework and 'browser' otherwise. (Default: browser)
	        browser - browser
	        node - node
	        deno - deno

	prependFormOrBodyParameters
	    Add form or body parameters to the beginning of the parameter list. (Default: false)

	snapshot
	    When setting this property to true, the version will be suffixed with -SNAPSHOT.yyyyMMddHHmm (Default: false)

	sortModelPropertiesByRequiredFlag
	    Sort model properties to place required parameters before optional parameters. (Default: true)

	sortParamsByRequiredFlag
	    Sort method arguments to place required parameters before optional parameters. (Default: true)

	supportsES6
	    Generate code that conforms to ES6. (Default: false)

	useInversify
	    Enable this to generate decorators and service identifiers for the InversifyJS inversion of control container. If you set 'deno' as 'platform', the generator will process this value as 'disable'. (Default: false)

	useObjectParameters
	    Use aggregate parameter objects as function arguments for api operations instead of passing each parameter as a separate function argument. (Default: false)

	useRxJS
	    Enable this to internally use rxjs observables. If disabled, a stub is used instead. This is required for the 'angular' framework. (Default: false)

